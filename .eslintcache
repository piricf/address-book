[{"D:\\address-book\\src\\components\\AddContactForm.js":"1","D:\\address-book\\src\\redux\\contacts\\contactAction.js":"2","D:\\address-book\\src\\views\\AddContactView.js":"3","D:\\address-book\\src\\components\\ContactCardForm.js":"4","D:\\address-book\\src\\components\\AddressBookForm.js":"5","D:\\address-book\\src\\firebase\\FirebaseConfig.js":"6","D:\\address-book\\src\\views\\LoginFormView.js":"7","D:\\address-book\\src\\redux\\auth\\userAction.js":"8","D:\\address-book\\src\\redux\\store.js":"9","D:\\address-book\\src\\views\\AddressBookView.js":"10","D:\\address-book\\src\\reportWebVitals.js":"11","D:\\address-book\\src\\components\\Navbar.js":"12","D:\\address-book\\src\\index.js":"13","D:\\address-book\\src\\App.js":"14","D:\\address-book\\src\\redux\\rootReducers.js":"15","D:\\address-book\\src\\redux\\contacts\\contactReducer.js":"16","D:\\address-book\\src\\components\\ContactModal.js":"17","D:\\address-book\\src\\redux\\auth\\userReducer.js":"18","D:\\address-book\\src\\components\\LoginForm.js":"19"},{"size":5706,"mtime":1612816908035,"results":"20","hashOfConfig":"21"},{"size":1668,"mtime":1612819961700,"results":"22","hashOfConfig":"21"},{"size":227,"mtime":1612212667348,"results":"23","hashOfConfig":"21"},{"size":3331,"mtime":1612820288378,"results":"24","hashOfConfig":"21"},{"size":4425,"mtime":1612820876031,"results":"25","hashOfConfig":"21"},{"size":831,"mtime":1611869689455,"results":"26","hashOfConfig":"21"},{"size":210,"mtime":1611611710296,"results":"27","hashOfConfig":"21"},{"size":641,"mtime":1612543332487,"results":"28","hashOfConfig":"21"},{"size":434,"mtime":1612028640956,"results":"29","hashOfConfig":"21"},{"size":232,"mtime":1612091923772,"results":"30","hashOfConfig":"21"},{"size":377,"mtime":1611611710295,"results":"31","hashOfConfig":"21"},{"size":1556,"mtime":1612821452752,"results":"32","hashOfConfig":"21"},{"size":517,"mtime":1612461873480,"results":"33","hashOfConfig":"21"},{"size":964,"mtime":1612462200871,"results":"34","hashOfConfig":"21"},{"size":535,"mtime":1612462379256,"results":"35","hashOfConfig":"21"},{"size":858,"mtime":1612821168202,"results":"36","hashOfConfig":"21"},{"size":1191,"mtime":1612811537490,"results":"37","hashOfConfig":"21"},{"size":571,"mtime":1612543384939,"results":"38","hashOfConfig":"21"},{"size":3037,"mtime":1612821797838,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"d0jrm7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\address-book\\src\\components\\AddContactForm.js",["88","89","90"],"import React, { useState, useEffect } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport Calendar from \"react-calendar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createContact } from \"../redux/contacts/contactAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { updateContact } from \"../redux/contacts/contactAction\";\r\nimport moment from \"moment\";\r\nconst AddContactForm = ({ isEdit, contactList, id }) => {\r\n  const dispatch = useDispatch();\r\n  const [contactData, setContactData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    birthDate: new Date(),\r\n    contactType: \"\",\r\n    contactOptions: {\r\n      mobilePhone: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      pager: \"\",\r\n    },\r\n    favorites: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setContactData({\r\n      ...contactData,\r\n      contactOptions: {\r\n        mobilePhone: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        pager: \"\",\r\n      },\r\n    });\r\n  }, [contactData.contactType]);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      const findContact = contactList.find((element) => element.id === id);\r\n      console.log(findContact, \"nasao sam kontakta\");\r\n      setContactData(findContact);\r\n    }\r\n  }, []);\r\n\r\n  const [closeCalendar, setCloseCalendar] = useState(false);\r\n  const closeCalendarHandler = () => {\r\n    setCloseCalendar(!closeCalendar);\r\n  };\r\n\r\n  const userUid = useSelector((state) => state.userReducer.user.user.uid);\r\n  const [error, setError] = useState(false);\r\n  const [redirect, setRedirect] = useState(\"\");\r\n\r\n  const contactDataChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setContactData({\r\n      ...contactData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const changeStatus = ({ target }) => {\r\n    const { value } = target;\r\n    setContactData({\r\n      ...contactData,\r\n      contactType: value,\r\n    });\r\n  };\r\n\r\n  const handleDateChange = (value) => {\r\n    console.log(value, \"DATE\");\r\n    setContactData({\r\n      ...contactData,\r\n      birthDate: moment(value).format(\"DD.MM.YYYY\"),\r\n    });\r\n  };\r\n\r\n  const handleContactOptionsChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setContactData({\r\n      ...contactData,\r\n      contactOptions: {\r\n        ...contactData.contactOptions,\r\n        [name]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const validate = (contactData) => {\r\n    let errors = false;\r\n\r\n    if (\r\n      !contactData.firstName ||\r\n      !contactData.lastName ||\r\n      !contactData.birthDate ||\r\n      !contactData.contactOptions[contactData.contactType]\r\n    ) {\r\n      errors = true;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleContactSubmit = (e) => {\r\n    e.preventDefault();\r\n    const validation = validate(contactData);\r\n\r\n    if (validation) {\r\n      setError(true);\r\n    } else {\r\n      dispatch(createContact(contactData, userUid));\r\n      setRedirect(true);\r\n    }\r\n  };\r\n\r\n  const redirectTo = redirect;\r\n  if (redirectTo) {\r\n    return <Redirect to=\"/adresar\" />;\r\n  }\r\n\r\n  const handleUpdate = (e) => {\r\n    e.preventDefault();\r\n    console.log(userUid, contactData, \"wo1921921919219219192192\");\r\n    dispatch(updateContact(userUid, contactData, id));\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={isEdit ? handleUpdate : handleContactSubmit}>\r\n      <Form.Input\r\n        maxLength=\"100\"\r\n        type=\"text\"\r\n        placeholder=\"First Name\"\r\n        name=\"firstName\"\r\n        onChange={contactDataChange}\r\n        value={contactData.firstName}\r\n      />\r\n      {console.log(contactData, \"stejt\")}\r\n\r\n      <Form.Input\r\n        maxLength=\"200\"\r\n        type=\"text\"\r\n        placeholder=\"Last Name\"\r\n        name=\"lastName\"\r\n        onChange={contactDataChange}\r\n        value={contactData.lastName}\r\n      />\r\n      <Button color=\"facebook\" onClick={closeCalendarHandler}>\r\n        {!closeCalendar ? <p>Date of Birth</p> : <p>Close</p>}\r\n      </Button>\r\n      {closeCalendar ? (\r\n        <Calendar\r\n          value={moment(contactData.birthDate).toDate()}\r\n          onChange={handleDateChange}\r\n        />\r\n      ) : null}\r\n      {error && !contactData.firstName && <p>First Name is required</p>}\r\n      {error && !contactData.lastName && <p>Last Name is required</p>}\r\n      <select\r\n        name=\"contactOptions\"\r\n        id=\"contactOptions\"\r\n        placeholder=\"Select type of contact\"\r\n        onChange={changeStatus}\r\n        value={contactData.contactType}\r\n      >\r\n        {console.log(contactData.contactType, \"yoowqkewq\")}\r\n        <option value=\"\" selected hidden>\r\n          Choose here\r\n        </option>\r\n\r\n        <option value=\"mobilePhone\" id=\"mobilePhone\">\r\n          Mobile Phone\r\n        </option>\r\n        <option value=\"phone\" id=\"phone\">\r\n          Phone\r\n        </option>\r\n        <option value=\"email\">Email</option>\r\n        <option value=\"pager\"> Pager</option>\r\n      </select>\r\n      {contactData.contactType && (\r\n        <>\r\n          <Form.Input\r\n            name={contactData.contactType || \"default\"}\r\n            type=\"text\"\r\n            id=\"inputContact\"\r\n            value={contactData.contactOptions[contactData.contactType]}\r\n            onChange={handleContactOptionsChange}\r\n            placeholder={contactData.contactType}\r\n          />\r\n          {error && !contactData.contactOptions[contactData.contactType] && (\r\n            <p>Contact type is required</p>\r\n          )}\r\n        </>\r\n      )}\r\n      {!isEdit ? <Button type=\"submit\">Add Contact</Button> : null}\r\n      {isEdit ? <Button type=\"submit\">Update</Button> : null}\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","D:\\address-book\\src\\redux\\contacts\\contactAction.js",[],"D:\\address-book\\src\\views\\AddContactView.js",[],["91","92"],"D:\\address-book\\src\\components\\ContactCardForm.js",[],"D:\\address-book\\src\\components\\AddressBookForm.js",[],"D:\\address-book\\src\\firebase\\FirebaseConfig.js",[],"D:\\address-book\\src\\views\\LoginFormView.js",[],["93","94"],"D:\\address-book\\src\\redux\\auth\\userAction.js",[],["95","96"],"D:\\address-book\\src\\redux\\store.js",[],"D:\\address-book\\src\\views\\AddressBookView.js",[],["97","98"],"D:\\address-book\\src\\reportWebVitals.js",[],["99","100"],"D:\\address-book\\src\\components\\Navbar.js",["101"],"D:\\address-book\\src\\index.js",[],["102","103"],"D:\\address-book\\src\\App.js",[],["104","105"],"D:\\address-book\\src\\redux\\rootReducers.js",[],["106","107"],"D:\\address-book\\src\\redux\\contacts\\contactReducer.js",[],"D:\\address-book\\src\\components\\ContactModal.js",[],"D:\\address-book\\src\\redux\\auth\\userReducer.js",[],["108","109"],"D:\\address-book\\src\\components\\LoginForm.js",[],{"ruleId":"110","severity":1,"message":"111","line":9,"column":10,"nodeType":"112","messageId":"113","endLine":9,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":38,"column":6,"nodeType":"116","endLine":38,"endColumn":31,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":8,"suggestions":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"120","replacedBy":"126"},{"ruleId":"122","replacedBy":"127"},{"ruleId":"120","replacedBy":"128"},{"ruleId":"122","replacedBy":"129"},{"ruleId":"120","replacedBy":"130"},{"ruleId":"122","replacedBy":"131"},{"ruleId":"110","severity":1,"message":"132","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},{"ruleId":"122","replacedBy":"136"},{"ruleId":"120","replacedBy":"137"},{"ruleId":"122","replacedBy":"138"},{"ruleId":"120","replacedBy":"139"},{"ruleId":"122","replacedBy":"140"},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contactData'. Either include it or remove the dependency array. You can also do a functional update 'setContactData(c => ...)' if you only need 'contactData' in the 'setContactData' call.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'contactList', 'id', and 'isEdit'. Either include them or remove the dependency array.",["142"],"no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],"'useEffect' is defined but never used.",["143"],["144"],["143"],["144"],["143"],["144"],["143"],["144"],{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [contactData, contactData.contactType]",{"range":"149","text":"150"},"Update the dependencies array to be: [contactList, id, isEdit]",{"range":"151","text":"152"},[1122,1147],"[contactData, contactData.contactType]",[1373,1375],"[contactList, id, isEdit]"]